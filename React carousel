React carousel with btn and indicator

import React, { useEffect, useRef, useState } from "react";
import "./App.css";
import Images from "./components/Images";
import { BiSolidLeftArrow, BiSolidRightArrow } from "react-icons/bi";

export default function App() {

  const imgRef = useRef(null);
  const [currentIndex, setCurrentIndex] = useState(0);
  const [currentWidth, setCurrentWidth] = useState(0);
  

  useEffect(() => {
    if (imgRef.current) {
      setCurrentWidth(imgRef.current.clientWidth);

      const intervalId = setInterval(() => {
        setCurrentIndex((prevIndex) => (prevIndex + 1) % Images.length);
      }, 3000);

      return () => clearInterval(intervalId);
    }
  }, []);


  const translateValue = `translateX(${currentIndex * -currentWidth}px)`;

  const indexHandler = (index) => {
    console.log(index);

    setCurrentIndex(index);
  };

  const prevBtnImg = () => {
    setCurrentIndex(
      (prevIndex) => (prevIndex - 1 + Images.length) % Images.length
    );
  };

  const nextBtnImg = () => {
    setCurrentIndex(
      (prevIndex) => (prevIndex + 1 + Images.length) % Images.length
    );
  };

  return (
    <>
    <h1 className="text-4xl font-mono text-center">Card carosuel</h1>
      <div className="img-container">
        <div ref={imgRef} style={{position:"relative"}} className="img-wrapper">
          {Images.map((data, index)=> {
            return(
              <div 
              style={{
                transform: translateValue,
              }}
              key={index} className="img-card">
                <div>
                   <h1>
                  {data.name}
                </h1>
                <p>
                  Ut pariatur officia aute incididunt exercitation voluptate.
                </p>
                </div>
               
                <img
                src={data.url}
                alt="data"
                className=""
                />
                
              </div>
            )
          })}
        </div>
        <div className="dots-container">
            {Images.map((_, index) => {
              return (
                <>
                <button
                  key={index}
                  onClick={() => indexHandler(index)}
                  className={`dot ${
                    index === currentIndex ? "active-dot" : ""
                  }`}
                ></button>
                
                </>
              );
            })}
          </div>
          <div className="btn-left">
            <button
            onClick={prevBtnImg}
            className="btn ">
              <BiSolidLeftArrow />
            </button>
          </div>
          <div className="btn-right">
            <button
            onClick={nextBtnImg}
            className="btn">
              <BiSolidRightArrow />
            </button>
          </div>
        </div>
    
    </>
  );
}


CSS: 
.dots-container{
    display: flex;
    justify-content: center;
    margin-top:10px;
}

.dot{
    width:10px;
    height: 10px;
    background-color: lightgray;
    border-radius: 50%;
    margin: 0 5px;
    cursor: pointer;
}

.active-dot{
    background-color: black;
}


.btn{
    font-size: 28px;
    opacity: 0.2;
}

.btn:hover{
    opacity: 1;
}


.btn-left{
    position: absolute;
    top:35%;
    left:0;
}

.btn-right{
    position: absolute;
    top:35%;
    right:0;
}

@media(max-width:767px){
    .btn-left{
        position: absolute;
        top:40%;
        left:0;
    }
    
    .btn-right{
        position: absolute;
        top:40%;
        right:0;
    }
}

.img-container{
    margin-top:100px;
    max-width:1024px;
    margin-inline:auto;

    border:2px solid;
    padding:20px;
}

.img-wrapper{
   overflow-x: hidden;
    display: flex;

    max-width: 768px;
    margin-inline: auto;
}

.img-wrapper > div {
    flex: 0 0 100%; /* Set the width of each image container to 100% */
    box-sizing: border-box; /* Include padding and border in the width */
  }
  
  .img-wrapper img {
    width: 50%; 
    height: auto; 
    margin-inline: auto;
    background-color: antiquewhite;
  }

  .img-card{
    display: flex;
    
  }
